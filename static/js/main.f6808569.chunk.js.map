{"version":3,"sources":["components/styled.ts","components/Icon.tsx","components/Navigation.tsx","components/CodeEditor.tsx","common/helpers.ts","common/defaultSchema.ts","common/defaultConfig.ts","components/FetchSchema.tsx","components/Tabs.tsx","components/Tab.tsx","App.tsx","specs/streetlights.ts","common/icons.ts","index.tsx"],"names":["PlaygroundWrapper","styled","div","NavigationWrapper","nav","NavigationHeader","header","NavigationHeaderH1","h1","NavigationHeaderIcon","img","NavigationHeaderAsyncApiText","span","NavigationHeaderEditorText","NavigationLinks","ul","NavigationLinksItem","li","NavigationLink","a","ContentWrapper","CodeEditorsWrapper","AsyncApiWrapper","TabsWrapper","CodeEditorWrapper","TabsHeader","TabsAdditionalHeaderContent","RefreshIcon","TabsContent","props","margin","TabWrapper","TabLink","active","InputWrapper","InputField","input","Button","button","Icon","iconName","url","iconPrefix","iconProp","href","target","rel","icon","NavigationComponent","src","alt","key","map","CodeEditorComponent","state","code","onChangeValue","editor","data","value","parentCallback","nextProps","nextState","externalResource","this","setState","mode","options","lineNumbers","lineWrapping","theme","tabSize","indentWithTabs","onChange","Component","parse","str","JSON","e","fetchSchema","link","requestOptions","method","fetch","then","handleResponse","response","text","defaultConfig","FetchSchema","fetchSchemaFromExternalResources","placeholder","type","onClick","Tabs","handleTabClick","tabIndex","activeTabIndex","renderHeader","children","React","Children","child","index","c","cloneElement","title","isActive","renderActiveTab","defaultActiveTabIndex","additionalHeaderContent","concat","filter","undefined","Tab","event","preventDefault","defaultSchema","Playground","schema","config","schemaFromEditor","schemaFromExternalResource","configFromEditor","updateSchema","updateSchemaFromExternalResource","updateConfig","refreshState","renderAdditionalHeaderContent","parsedConfig","Navigation","CodeEditor","autoAddCss","library","add","faGithub","faSlack","faGlobe","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.f6808569.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const PlaygroundWrapper = styled.div``;\n\nexport const NavigationWrapper = styled.nav`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  width: 100%;\n  line-height: 48px;\n  padding: 0;\n  background-color: #263238;\n  border-bottom: #607d8b 2px solid;\n`;\n\nexport const NavigationHeader = styled.header`\n  margin-left: 16px;\n  display: inline-block;\n`;\n\nexport const NavigationHeaderH1 = styled.h1`\n  color: #fff;\n  margin: 0;\n  font-weight: bold;\n  font-size: 20px;\n  line-height: 48px;\n`;\n\nexport const NavigationHeaderIcon = styled.img`\n  height: 34px;\n  max-height: 34px;\n  margin-top: 7px;\n  float: left;\n`;\n\nexport const NavigationHeaderAsyncApiText = styled.span`\n  font-weight: bold;\n  margin-left: 12px;\n`;\n\nexport const NavigationHeaderEditorText = styled.span`\n  font-style: italic;\n  margin-left: 6px;\n`;\n\nexport const NavigationLinks = styled.ul`\n  display: flex;\n  flex-grow: 1;\n  justify-content: flex-end;\n  margin: 0 16px 0 0;\n  padding: 0;\n  position: relative;\n  list-style-type: none;\n`;\n\nexport const NavigationLinksItem = styled.li`\n  display: inline-block;\n  margin-left: 12px;\n\n  > a {\n    font-family: 'SAP-Icons';\n    font-weight: 700;\n    color: #f77669;\n    transition: 0.2s color linear;\n    text-decoration: none;\n    cursor: pointer;\n\n    &:hover {\n      color: #c3e88d;\n    }\n  }\n`;\n\nexport const NavigationLink = styled.a``;\n\nexport const ContentWrapper = styled.div`\n  width: 100%;\n  height: calc(100vh - 50px);\n  min-height: calc(100vh - 50px);\n  display: flex;\n  justify-content: space-between;\n  background: #f3f4f5;\n`;\n\nexport const CodeEditorsWrapper = styled.div`\n  width: 40%;\n  height: calc(100vh - 50px);\n  min-height: calc(100vh - 50px);\n  overflow: auto;\n  background: rgb(38, 50, 56);\n`;\n\nexport const AsyncApiWrapper = styled.div`\n  width: 60%;\n  height: calc(100vh - 50px);\n  min-height: calc(100vh - 50px);\n  overflow: auto;\n\n  > .asyncapi {\n    padding: 24px;\n  }\n  > .asyncapi__error {\n    margin: 24px;\n  }\n`;\n\nexport const TabsWrapper = styled.div`\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  font-family: '72';\n  font-weight: normal;\n`;\n\nexport const CodeEditorWrapper = styled.div`\n  > .react-codemirror2 > .CodeMirror {\n    height: 100%;\n    min-height: 100%;\n  }\n`;\n\nexport const TabsHeader = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0 5px;\n  display: flex;\n  justify-items: flex-start;\n  flex-flow: row nowrap;\n`;\n\nexport const TabsAdditionalHeaderContent = styled.li`\n  margin: 0 0 0 auto;\n  position: relative;\n  display: inline-block;\n  padding: 19px 15px;\n`;\n\nexport const RefreshIcon = styled.div`\n  font-family: 'SAP-Icons';\n  font-weight: 700;\n  color: #f77669;\n  transition: 0.2s color linear;\n  cursor: pointer;\n\n  &:hover {\n    color: #c3e88d;\n  }\n`;\n\ninterface TabsContentProps {\n  margin?: string;\n}\n\nexport const TabsContent = styled.div<TabsContentProps>`\n  margin: ${props => (props.margin ? props.margin : '20px')};\n  font-size: 14px;\n  color: #515559;\n  line-height: 1.57;\n`;\n\nexport const TabWrapper = styled.li``;\n\ninterface TabLinkProps {\n  active?: boolean;\n}\n\nexport const TabLink = styled.div<TabLinkProps>`\n  display: flex;\n  align-items: center;\n  margin: 0 15px;\n  padding: 19px 0 15px;\n  border: none;\n  position: relative;\n  color: ${props => (props.active ? '#c3e88d' : '#f77669')};\n  font-size: 14px;\n  outline: none;\n  transition: 0.2s color linear;\n  text-transform: uppercase;\n  cursor: pointer;\n\n  &:first-letter {\n    text-transform: uppercase;\n  }\n\n  &:after {\n    content: '';\n    bottom: 0;\n    display: block;\n    position: absolute;\n    height: ${props => (props.active ? '3px' : '0px')};\n    width: 100%;\n    border-radius: 2px;\n    background-color: #c3e88d;\n  }\n\n  &:hover {\n    color: #c3e88d;\n\n    &:after {\n      content: '';\n      bottom: 0;\n      display: block;\n      position: absolute;\n      height: 3px;\n      width: 100%;\n      border-radius: 2px;\n      background-color: #c3e88d;\n    }\n  }\n`;\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  box-sizing: border-box;\n  position: relative;\n  margin-bottom: 20px;\n`;\n\nexport const InputField = styled.input`\n  width: 100%;\n  padding: 6px 12px;\n  box-sizing: border-box;\n  outline: none;\n  background: inherit;\n  border: 3px solid #f77669;\n  color: #f77669;\n  border-radius: 6px;\n  transition: 0.2s border, color linear;\n  font-size: 14px;\n\n  &:hover {\n    color: #c3e88d;\n    border-color: #c3e88d;\n  }\n`;\n\nexport const Button = styled.button`\n  width: auto;\n  padding: 6px 12px;\n  display: inline-block;\n  background: inherit;\n  border: 3px solid #f77669;\n  color: #f77669;\n  border-radius: 6px;\n  font-size: 14px;\n  margin-left: 12px;\n  white-space: nowrap;\n  transition: 0.2s border, color linear;\n  cursor: pointer;\n\n  &:hover {\n    color: #c3e88d;\n    border-color: #c3e88d;\n  }\n`;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  IconPrefix,\n  IconName,\n  IconProp,\n} from '@fortawesome/fontawesome-svg-core';\n\nimport IconProps from '../common/icons';\n\nimport { NavigationLinksItem, NavigationLink } from './styled';\n\nconst Icon: React.StatelessComponent<IconProps> = ({\n  iconName,\n  url,\n  iconPrefix = 'fab',\n}) => {\n  const iconProp: IconProp = [iconPrefix as IconPrefix, iconName as IconName];\n\n  return (\n    <NavigationLinksItem>\n      <NavigationLink href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n        <FontAwesomeIcon icon={iconProp} />\n      </NavigationLink>\n    </NavigationLinksItem>\n  );\n};\n\nexport default Icon;\n","import React from 'react';\nimport IconComponent from './Icon';\n\nimport Icon from '../common/icons';\n\nimport {\n  NavigationWrapper,\n  NavigationHeader,\n  NavigationHeaderH1,\n  NavigationHeaderIcon,\n  NavigationHeaderAsyncApiText,\n  NavigationHeaderEditorText,\n  NavigationLinks,\n} from './styled';\n\ninterface IconData extends Icon {\n  key: string;\n}\n\nconst NavigationComponent: React.StatelessComponent = () => {\n  const iconsData: IconData[] = [\n    {\n      key: 'github',\n      url: 'https://github.com/asyncapi/asyncapi-react',\n      iconName: 'github',\n    },\n    {\n      key: 'slack',\n      url:\n        'https://join.slack.com/t/asyncapi/shared_invite/enQtNDY3MzI0NjU5OTQyLWU4ZGU2MTg1MDIyZDFjMTI2YjkxYTdlMzc1NjgzYTAxZDM1YTg1NDhhMTE2NDliMjlhZjYxNzk0ZTE5ZGU1ZTg',\n      iconName: 'slack',\n    },\n    {\n      key: 'asyncapi',\n      url: 'https://www.asyncapi.com/',\n      iconName: 'globe',\n      iconPrefix: 'fa',\n    },\n  ];\n\n  return (\n    <NavigationWrapper>\n      <NavigationHeader>\n        <NavigationHeaderH1>\n          <NavigationHeaderIcon\n            src=\"https://avatars0.githubusercontent.com/u/16401334?v=4&s=200\"\n            alt=\"AsyncAPI logo\"\n          />\n          <NavigationHeaderAsyncApiText>\n            AsyncAPI React\n          </NavigationHeaderAsyncApiText>\n          <NavigationHeaderEditorText>editor</NavigationHeaderEditorText>\n        </NavigationHeaderH1>\n      </NavigationHeader>\n      <NavigationLinks>\n        {iconsData.map(icon => (\n          <IconComponent {...icon} key={icon.key} />\n        ))}\n      </NavigationLinks>\n    </NavigationWrapper>\n  );\n};\n\nexport default NavigationComponent;\n","import React, { Component } from 'react';\nimport * as codemirror from 'codemirror';\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\n\nimport { CodeEditorWrapper } from './styled';\n\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\n\nimport 'codemirror/mode/yaml/yaml';\nimport 'codemirror/mode/javascript/javascript';\n\ninterface Props {\n  code: string;\n  externalResource?: string;\n  mode?: string;\n  parentCallback(value: string): void;\n}\n\ninterface State {\n  code: string;\n}\n\nclass CodeEditorComponent extends Component<Props, State> {\n  state = {\n    code: this.props.code,\n  };\n\n  componentDidUpdate(nextProps: Props, nextState: State) {\n    const { externalResource } = this.props;\n    if (nextProps.externalResource !== externalResource) {\n      this.setState({ code: externalResource! });\n    }\n  }\n\n  render() {\n    const {\n      props: { mode = 'application/json' },\n      state: { code },\n    } = this;\n\n    return (\n      <CodeEditorWrapper>\n        <CodeMirror\n          value={code}\n          options={{\n            mode,\n            lineNumbers: true,\n            lineWrapping: true,\n            theme: 'material',\n            tabSize: 2,\n            indentWithTabs: false,\n          }}\n          onChange={this.onChangeValue}\n        />\n      </CodeEditorWrapper>\n    );\n  }\n\n  private onChangeValue = (\n    editor: codemirror.Editor,\n    data: codemirror.EditorChange,\n    value: string,\n  ): void => {\n    this.props.parentCallback(value);\n  };\n}\n\nexport default CodeEditorComponent;\n","export const parse = <T extends {}>(str?: string): T => {\n  if (!str) {\n    return {} as T;\n  }\n\n  try {\n    return JSON.parse(str) as T;\n  } catch (e) {\n    return {} as T;\n  }\n};\n\nexport const stringify = <T extends {}>(content?: T): string => {\n  if (!content) {\n    return '';\n  }\n\n  try {\n    return JSON.stringify(content);\n  } catch (e) {\n    return '';\n  }\n};\n\nexport const fetchSchema = async (link: string): Promise<any> => {\n  const requestOptions = {\n    method: 'GET',\n  };\n\n  return fetch(link, requestOptions).then(handleResponse);\n};\n\nfunction handleResponse(response: any) {\n  return response.text().then((data: string) => data);\n}\n","export const defaultSchema = `\nasyncapi: '2.0.0-rc2'\nid: 'urn:com:smartylighting:streetlights:server'\ninfo:\n  title: Streetlights API\n  version: '1.0.0'\n  description: |\n    The Smartylighting Streetlights API allows you to remotely manage the city lights.\n\n    ### Check out its awesome features:\n\n    * Turn a specific streetlight on/off 🌃\n    * Dim a specific streetlight 😎\n    * Receive real-time information about environmental lighting conditions 📈\n  termsOfService: http://asyncapi.org/terms/\n  contact:\n    name: API Support\n    url: \"http://www.asyncapi.org/support\"\n    email: \"support@asyncapi.org\"\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n    wrongField: foobar\n\nservers:\n  production:\n    url: api.streetlights.smartylighting.com:{port}\n    protocol: mqtt\n    description: Test broker\n    variables:\n      port:\n        description: Secure connection (TLS) is available through port 8883.\n        default: '1883'\n        enum:\n          - '1883'\n          - '8883'\n    security:\n      - apiKey: []\n      - supportedOauthFlows:\n        - streetlights:on\n        - streetlights:off\n        - streetlights:dim\n      - openIdConnectWellKnown: []\n\ndefaultContentType: application/json\n\nchannels:\n  smartylighting/streetlights/1/0/event/{streetlightId}/lighting/measured:\n    description: The topic on which measured values may be produced and consumed.\n    parameters:\n      streetlightId:\n        $ref: '#/components/parameters/streetlightId'\n    subscribe:\n      summary: Receive information about environmental lighting conditions of a particular streetlight.\n      operationId: receiveLightMeasurement\n      traits:\n        - $ref: '#/components/operationTraits/kafka'\n      message:\n        $ref: '#/components/messages/lightMeasured'\n\n  smartylighting/streetlights/1/0/action/{streetlightId}/turn/on:\n    parameters:\n      streetlightId:\n        $ref: '#/components/parameters/streetlightId'\n    publish:\n      operationId: turnOn\n      traits:\n        - $ref: '#/components/operationTraits/kafka'\n      message:\n        $ref: '#/components/messages/turnOnOff'\n\n  smartylighting/streetlights/1/0/action/{streetlightId}/turn/off:\n    parameters:\n      streetlightId:\n        $ref: '#/components/parameters/streetlightId'\n    publish:\n      operationId: turnOff\n      traits:\n        - $ref: '#/components/operationTraits/kafka'\n      message:\n        $ref: '#/components/messages/turnOnOff'\n\n  smartylighting/streetlights/1/0/action/{streetlightId}/dim:\n    parameters:\n      streetlightId:\n        $ref: '#/components/parameters/streetlightId'\n    publish:\n      operationId: dimLight\n      traits:\n        - $ref: '#/components/operationTraits/kafka'\n      message:\n        $ref: '#/components/messages/dimLight'\n\ncomponents:\n  messages:\n    lightMeasured:\n      name: lightMeasured\n      title: Light measured\n      summary: Inform about environmental lighting conditions for a particular streetlight.\n      contentType: application/json\n      traits:\n        - $ref: '#/components/messageTraits/commonHeaders'\n      payload:\n        $ref: \"#/components/schemas/lightMeasuredPayload\"\n    turnOnOff:\n      name: turnOnOff\n      title: Turn on/off\n      summary: Command a particular streetlight to turn the lights on or off.\n      traits:\n        - $ref: '#/components/messageTraits/commonHeaders'\n      payload:\n        $ref: \"#/components/schemas/turnOnOffPayload\"\n    dimLight:\n      name: dimLight\n      title: Dim light\n      summary: Command a particular streetlight to dim the lights.\n      traits:\n        - $ref: '#/components/messageTraits/commonHeaders'\n      payload:\n        $ref: \"#/components/schemas/dimLightPayload\"\n\n  schemas:\n    lightMeasuredPayload:\n      type: object\n      properties:\n        lumens:\n          type: integer\n          minimum: 0\n          description: Light intensity measured in lumens.\n        sentAt:\n          $ref: \"#/components/schemas/sentAt\"\n    turnOnOffPayload:\n      type: object\n      properties:\n        command:\n          type: string\n          enum:\n            - on\n            - off\n          description: Whether to turn on or off the light.\n        sentAt:\n          $ref: \"#/components/schemas/sentAt\"\n    dimLightPayload:\n      type: object\n      properties:\n        percentage:\n          type: integer\n          description: Percentage to which the light should be dimmed to.\n          minimum: 0\n          maximum: 100\n        sentAt:\n          $ref: \"#/components/schemas/sentAt\"\n    sentAt:\n      type: string\n      format: date-time\n      description: Date and time when the message was sent.\n\n  securitySchemes:\n    apiKey:\n      type: apiKey\n      in: user\n      description: Provide your API key as the user and leave the password empty.\n    supportedOauthFlows:\n      type: oauth2\n      description: Flows to support OAuth 2.0\n      flows:\n        implicit:\n          authorizationUrl: 'https://authserver.example/auth'\n          scopes:\n            'streetlights:on': Ability to switch lights on\n            'streetlights:off': Ability to switch lights off\n            'streetlights:dim': Ability to dim the lights\n        password:\n          tokenUrl: 'https://authserver.example/token'\n          scopes:\n            'streetlights:on': Ability to switch lights on\n            'streetlights:off': Ability to switch lights off\n            'streetlights:dim': Ability to dim the lights\n        clientCredentials:\n          tokenUrl: 'https://authserver.example/token'\n          scopes:\n            'streetlights:on': Ability to switch lights on\n            'streetlights:off': Ability to switch lights off\n            'streetlights:dim': Ability to dim the lights\n        authorizationCode:\n          authorizationUrl: 'https://authserver.example/auth'\n          tokenUrl: 'https://authserver.example/token'\n          refreshUrl: 'https://authserver.example/refresh'\n          scopes:\n            'streetlights:on': Ability to switch lights on\n            'streetlights:off': Ability to switch lights off\n            'streetlights:dim': Ability to dim the lights\n    openIdConnectWellKnown:\n      type: openIdConnect\n      openIdConnectUrl: 'https://authserver.example/.well-known'\n\n  parameters:\n    streetlightId:\n      description: The ID of the streetlight.\n      schema:\n        type: string\n\n  messageTraits:\n    commonHeaders:\n      headers:\n        type: object\n        properties:\n          my-app-header:\n            type: integer\n            minimum: 0\n            maximum: 100\n  \n  operationTraits:\n    kafka:\n      bindings:\n        kafka:\n          clientId: my-app-id\n`;\n\nexport const defaultSchema2 = `\nasyncapi: '2.0.0-rc2'\nid: 'urn:com:slack:rtm:api'\ninfo:\n  title: Slack Real Time Messaging API\n  version: '1.0.0'\n\nservers:\n  production:\n    url: https://slack.com/api/rtm.connect\n    protocol: https\n    protocolVersion: '1.1'\n    security:\n      - token: []\n\nchannels:\n  /:\n    subscribe:\n      message:\n        oneOf:\n          - $ref: '#/components/messages/hello'\n          - $ref: '#/components/messages/connectionError'\n          - $ref: '#/components/messages/accountsChanged'\n          - $ref: '#/components/messages/botAdded'\n          - $ref: '#/components/messages/botChanged'\n          - $ref: '#/components/messages/channelArchive'\n          - $ref: '#/components/messages/channelCreated'\n          - $ref: '#/components/messages/channelDeleted'\n          - $ref: '#/components/messages/channelHistoryChanged'\n          - $ref: '#/components/messages/channelJoined'\n          - $ref: '#/components/messages/channelLeft'\n          - $ref: '#/components/messages/channelMarked'\n          - $ref: '#/components/messages/channelRename'\n          - $ref: '#/components/messages/channelUnarchive'\n          - $ref: '#/components/messages/commandsChanged'\n          - $ref: '#/components/messages/dndUpdated'\n          - $ref: '#/components/messages/dndUpdatedUser'\n          - $ref: '#/components/messages/emailDomainChanged'\n          - $ref: '#/components/messages/emojiRemoved'\n          - $ref: '#/components/messages/emojiAdded'\n          - $ref: '#/components/messages/fileChange'\n          - $ref: '#/components/messages/fileCommentAdded'\n          - $ref: '#/components/messages/fileCommentDeleted'\n          - $ref: '#/components/messages/fileCommentEdited'\n          - $ref: '#/components/messages/fileCreated'\n          - $ref: '#/components/messages/fileDeleted'\n          - $ref: '#/components/messages/filePublic'\n          - $ref: '#/components/messages/fileShared'\n          - $ref: '#/components/messages/fileUnshared'\n          - $ref: '#/components/messages/goodbye'\n          - $ref: '#/components/messages/groupArchive'\n          - $ref: '#/components/messages/groupClose'\n          - $ref: '#/components/messages/groupHistoryChanged'\n          - $ref: '#/components/messages/groupJoined'\n          - $ref: '#/components/messages/groupLeft'\n          - $ref: '#/components/messages/groupMarked'\n          - $ref: '#/components/messages/groupOpen'\n          - $ref: '#/components/messages/groupRename'\n          - $ref: '#/components/messages/groupUnarchive'\n          - $ref: '#/components/messages/imClose'\n          - $ref: '#/components/messages/imCreated'\n          - $ref: '#/components/messages/imMarked'\n          - $ref: '#/components/messages/imOpen'\n          - $ref: '#/components/messages/manualPresenceChange'\n          - $ref: '#/components/messages/memberJoinedChannel'\n          - $ref: '#/components/messages/message'\n    publish:\n      message:\n        $ref: '#/components/messages/outgoingMessage'\n\ncomponents:\n  securitySchemes:\n    token:\n      type: httpApiKey\n      name: token\n      in: query\n\n  schemas:\n    attachment:\n      type: object\n      properties:\n        fallback:\n          type: string\n        color:\n          type: string\n        pretext:\n          type: string\n        author_name:\n          type: string\n        author_link:\n          type: string\n          format: uri\n        author_icon:\n          type: string\n          format: uri\n        title:\n          type: string\n        title_link:\n          type: string\n          format: uri\n        text:\n          type: string\n        fields:\n          type: array\n          items:\n            type: object\n            properties:\n              title:\n                type: string\n              value:\n                type: string\n              short:\n                type: boolean\n        image_url:\n          type: string\n          format: uri\n        thumb_url:\n          type: string\n          format: uri\n        footer:\n          type: string\n        footer_icon:\n          type: string\n          format: uri\n        ts:\n          type: number\n\n  messages:\n    hello:\n      summary: 'First event received upon connection.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - hello\n    connectionError:\n      summary: 'Event received when a connection error happens.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - error\n          error:\n            type: object\n            properties:\n              code:\n                type: number\n              msg:\n                type: string\n    accountsChanged:\n      summary: 'The list of accounts a user is signed into has changed.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - accounts_changed\n    botAdded:\n      summary: 'A bot user was added.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - bot_added\n          bot:\n            type: object\n            properties:\n              id:\n                type: string\n              app_id:\n                type: string\n              name:\n                type: string\n              icons:\n                type: object\n                additionalProperties:\n                  type: string\n    botChanged:\n      summary: 'A bot user was changed.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - bot_added\n          bot:\n            type: object\n            properties:\n              id:\n                type: string\n              app_id:\n                type: string\n              name:\n                type: string\n              icons:\n                type: object\n                additionalProperties:\n                  type: string\n    channelArchive:\n      summary: 'A channel was archived.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - channel_archive\n          channel:\n            type: string\n          user:\n            type: string\n    channelCreated:\n      summary: 'A channel was created.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - channel_created\n          channel:\n            type: object\n            properties:\n              id:\n                type: string\n              name:\n                type: string\n              created:\n                type: number\n              creator:\n                type: string\n    channelDeleted:\n      summary: 'A channel was deleted.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - channel_deleted\n          channel:\n            type: string\n    channelHistoryChanged:\n      summary: 'Bulk updates were made to a channel''s history.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - channel_history_changed\n          latest:\n            type: string\n          ts:\n            type: string\n          event_ts:\n            type: string\n    channelJoined:\n      summary: 'You joined a channel.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - channel_joined\n          channel:\n            type: object\n            properties:\n              id:\n                type: string\n              name:\n                type: string\n              created:\n                type: number\n              creator:\n                type: string\n    channelLeft:\n      summary: 'You left a channel.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - channel_left\n          channel:\n            type: string\n    channelMarked:\n      summary: 'Your channel read marker was updated.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - channel_marked\n          channel:\n            type: string\n          ts:\n            type: string\n    channelRename:\n      summary: 'A channel was renamed.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - channel_rename\n          channel:\n            type: object\n            properties:\n              id:\n                type: string\n              name:\n                type: string\n              created:\n                type: number\n    channelUnarchive:\n      summary: 'A channel was unarchived.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - channel_unarchive\n          channel:\n            type: string\n          user:\n            type: string\n    commandsChanged:\n      summary: 'A slash command has been added or changed.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - commands_changed\n          event_ts:\n            type: string\n    dndUpdated:\n      summary: 'Do not Disturb settings changed for the current user.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - dnd_updated\n          user:\n            type: string\n          dnd_status:\n            type: object\n            properties:\n              dnd_enabled:\n                type: boolean\n              next_dnd_start_ts:\n                type: number\n              next_dnd_end_ts:\n                type: number\n              snooze_enabled:\n                type: boolean\n              snooze_endtime:\n                type: number\n    dndUpdatedUser:\n      summary: 'Do not Disturb settings changed for a member.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - dnd_updated_user\n          user:\n            type: string\n          dnd_status:\n            type: object\n            properties:\n              dnd_enabled:\n                type: boolean\n              next_dnd_start_ts:\n                type: number\n              next_dnd_end_ts:\n                type: number\n    emailDomainChanged:\n      summary: 'The workspace email domain has changed.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - email_domain_changed\n          email_domain:\n            type: string\n          event_ts:\n            type: string\n    emojiRemoved:\n      summary: 'A custom emoji has been removed.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - emoji_changed\n          subtype:\n            type: string\n            enum:\n              - remove\n          names:\n            type: array\n            items:\n              type: string\n          event_ts:\n            type: string\n    emojiAdded:\n      summary: 'A custom emoji has been added.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - emoji_changed\n          subtype:\n            type: string\n            enum:\n              - add\n          name:\n            type: string\n          value:\n            type: string\n            format: uri\n          event_ts:\n            type: string\n    fileChange:\n      summary: 'A file was changed.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - file_change\n          file_id:\n            type: string\n          file:\n            type: object\n            properties:\n              id:\n                type: string\n    fileCommentAdded:\n      summary: 'A file comment was added.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - file_comment_added\n          comment: {}\n          file_id:\n            type: string\n          file:\n            type: object\n            properties:\n              id:\n                type: string\n    fileCommentDeleted:\n      summary: 'A file comment was deleted.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - file_comment_deleted\n          comment:\n            type: string\n          file_id:\n            type: string\n          file:\n            type: object\n            properties:\n              id:\n                type: string\n    fileCommentEdited:\n      summary: 'A file comment was edited.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - file_comment_edited\n          comment: {}\n          file_id:\n            type: string\n          file:\n            type: object\n            properties:\n              id:\n                type: string\n    fileCreated:\n      summary: 'A file was created.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - file_created\n          file_id:\n            type: string\n          file:\n            type: object\n            properties:\n              id:\n                type: string\n    fileDeleted:\n      summary: 'A file was deleted.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - file_deleted\n          file_id:\n            type: string\n          event_ts:\n            type: string\n    filePublic:\n      summary: 'A file was made public.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - file_public\n          file_id:\n            type: string\n          file:\n            type: object\n            properties:\n              id:\n                type: string\n    fileShared:\n      summary: 'A file was shared.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - file_shared\n          file_id:\n            type: string\n          file:\n            type: object\n            properties:\n              id:\n                type: string\n    fileUnshared:\n      summary: 'A file was unshared.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - file_unshared\n          file_id:\n            type: string\n          file:\n            type: object\n            properties:\n              id:\n                type: string\n    goodbye:\n      summary: 'The server intends to close the connection soon.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - goodbye\n    groupArchive:\n      summary: 'A private channel was archived.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - group_archive\n          channel:\n            type: string\n    groupClose:\n      summary: 'You closed a private channel.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - group_close\n          user:\n            type: string\n          channel:\n            type: string\n    groupHistoryChanged:\n      summary: 'Bulk updates were made to a private channel''s history.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - group_history_changed\n          latest:\n            type: string\n          ts:\n            type: string\n          event_ts:\n            type: string\n    groupJoined:\n      summary: 'You joined a private channel.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - group_joined\n          channel:\n            type: object\n            properties:\n              id:\n                type: string\n              name:\n                type: string\n              created:\n                type: number\n              creator:\n                type: string\n    groupLeft:\n      summary: 'You left a private channel.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - group_left\n          channel:\n            type: string\n    groupMarked:\n      summary: 'A private channel read marker was updated.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - group_marked\n          channel:\n            type: string\n          ts:\n            type: string\n    groupOpen:\n      summary: 'You opened a private channel.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - group_open\n          user:\n            type: string\n          channel:\n            type: string\n    groupRename:\n      summary: 'A private channel was renamed.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - group_rename\n          channel:\n            type: object\n            properties:\n              id:\n                type: string\n              name:\n                type: string\n              created:\n                type: number\n    groupUnarchive:\n      summary: 'A private channel was unarchived.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - group_unarchive\n          channel:\n            type: string\n          user:\n            type: string\n    imClose:\n      summary: 'You closed a DM.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - im_close\n          channel:\n            type: string\n          user:\n            type: string\n    imCreated:\n      summary: 'A DM was created.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - im_created\n          channel:\n            type: object\n            properties:\n              id:\n                type: string\n              name:\n                type: string\n              created:\n                type: number\n              creator:\n                type: string\n          user:\n            type: string\n    imMarked:\n      summary: 'A direct message read marker was updated.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - im_marked\n          channel:\n            type: string\n          ts:\n            type: string\n    imOpen:\n      summary: 'You opened a DM.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - im_open\n          channel:\n            type: string\n          user:\n            type: string\n    manualPresenceChange:\n      summary: 'You manually updated your presence.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - manual_presence_change\n          presence:\n            type: string\n    memberJoinedChannel:\n      summary: 'A user joined a public or private channel.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - member_joined_channel\n          user:\n            type: string\n          channel:\n            type: string\n          channel_type:\n            type: string\n            enum:\n              - C\n              - G\n          team:\n            type: string\n          inviter:\n            type: string\n    memberLeftChannel:\n      summary: 'A user left a public or private channel.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - member_left_channel\n          user:\n            type: string\n          channel:\n            type: string\n          channel_type:\n            type: string\n            enum:\n              - C\n              - G\n          team:\n            type: string\n    message:\n      summary: 'A message was sent to a channel.'\n      payload:\n        type: object\n        properties:\n          type:\n            type: string\n            enum:\n              - message\n          user:\n            type: string\n          channel:\n            type: string\n          text:\n            type: string\n          ts:\n            type: string\n          attachments:\n            type: array\n            items:\n              $ref: '#/components/schemas/attachment'\n          edited:\n            type: object\n            properties:\n              user:\n                type: string\n              ts:\n                type: string\n    outgoingMessage:\n      summary: 'A message was sent to a channel.'\n      payload:\n        type: object\n        properties:\n          id:\n            type: number\n          type:\n            type: string\n            enum:\n              - message\n          channel:\n            type: string\n          text:\n            type: string\n`;\n","export const defaultConfig: string = `{\n  \"show\": {\n    \"info\": true,\n    \"servers\": true,\n    \"security\": false,\n    \"messages\": true,\n    \"schemas\": true,\n    \"channels\": true,\n  },\n  \"showErrors\": true,\n  \"disableDefaultTheme\": false\n}`;\n","import React, { Component } from 'react';\n\nimport { InputWrapper, InputField, Button } from './styled';\n\nimport { fetchSchema } from '../common';\n\ninterface Props {\n  parentCallback(value: string): void;\n}\n\ninterface State {\n  link: string;\n}\n\nclass FetchSchema extends Component<Props, State> {\n  state = {\n    link: '',\n  };\n\n  render() {\n    const { link } = this.state;\n\n    return (\n      <InputWrapper>\n        <InputField\n          value={link}\n          placeholder=\"Link for external schema\"\n          onChange={(e: any) => this.setState({ link: e.target.value })}\n        />\n        <Button type=\"button\" onClick={this.fetchSchemaFromExternalResources}>\n          Fetch schema\n        </Button>\n      </InputWrapper>\n    );\n  }\n\n  private fetchSchemaFromExternalResources = async () => {\n    const {\n      props: { parentCallback },\n      state: { link },\n    } = this;\n    parentCallback(await fetchSchema(link));\n  };\n}\n\nexport default FetchSchema;\n","import React, { Component } from 'react';\n\nimport {\n  TabsWrapper,\n  TabsHeader,\n  TabsAdditionalHeaderContent,\n  TabsContent,\n} from './styled';\n\nimport { TabProps } from './Tab';\n\ninterface Props {\n  additionalHeaderContent?: React.ReactNode;\n  defaultActiveTabIndex?: number;\n}\n\ninterface State {\n  activeTabIndex: number;\n}\n\nclass Tabs extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      activeTabIndex: this.props.defaultActiveTabIndex\n        ? this.props.defaultActiveTabIndex\n        : 0,\n    };\n  }\n\n  handleTabClick = (tabIndex: number) => {\n    this.setState({\n      activeTabIndex: tabIndex,\n    });\n  };\n\n  renderHeader = (children: Array<React.ReactElement<TabProps>>) =>\n    React.Children.map(children, (child, index) => {\n      const c = child as React.ReactElement<TabProps>;\n      return React.cloneElement(c, {\n        title: c.props.title,\n        parentCallback: this.handleTabClick,\n        tabIndex: index,\n        isActive: index === this.state.activeTabIndex,\n      });\n    });\n\n  renderActiveTab = (children: Array<React.ReactElement<TabProps>>) => {\n    if (children[this.state.activeTabIndex]) {\n      return children[this.state.activeTabIndex].props.children;\n    }\n    return null;\n  };\n\n  render() {\n    const { additionalHeaderContent } = this.props;\n    const children = []\n      .concat(...(this.props.children as any))\n      .filter(child => child !== null && child !== undefined);\n\n    return (\n      <TabsWrapper>\n        <TabsHeader>\n          {this.renderHeader(children)}\n          <TabsAdditionalHeaderContent>\n            {additionalHeaderContent}\n          </TabsAdditionalHeaderContent>\n        </TabsHeader>\n        <TabsContent>{this.renderActiveTab(children)}</TabsContent>\n      </TabsWrapper>\n    );\n  }\n}\n\nexport default Tabs;\n","import React, { Component } from 'react';\n\nimport { TabLink, TabWrapper } from './styled';\n\nexport interface TabProps {\n  children: React.ReactNode;\n  title: string;\n  tabIndex?: number;\n  isActive?: boolean;\n  parentCallback?: (value: number) => void;\n}\n\nclass Tab extends Component<TabProps> {\n  render() {\n    const { title, tabIndex, isActive, parentCallback } = this.props;\n\n    return (\n      <TabWrapper key={tabIndex}>\n        <TabLink\n          onClick={(event: any) => {\n            event.preventDefault();\n            parentCallback!(tabIndex!);\n          }}\n          active={isActive}\n        >\n          {title}\n        </TabLink>\n      </TabWrapper>\n    );\n  }\n}\n\nexport default Tab;\n","import React, { Component } from 'react';\nimport AsyncApi, { ConfigInterface } from '@kyma-project/asyncapi-react';\n\nimport {\n  Navigation,\n  CodeEditor,\n  FetchSchema,\n  RefreshIcon,\n  Tabs,\n  Tab,\n  PlaygroundWrapper,\n  ContentWrapper,\n  CodeEditorsWrapper,\n  AsyncApiWrapper,\n} from './components';\n\nimport { defaultConfig, parse } from './common';\nimport * as specs from './specs';\n\nconst defaultSchema = specs.streetlights;\n\ninterface State {\n  schema: string;\n  config: string;\n  schemaFromEditor: string;\n  schemaFromExternalResource: string;\n  configFromEditor: string;\n}\n\nclass Playground extends Component<{}, State> {\n  state = {\n    schema: defaultSchema,\n    config: defaultConfig,\n    schemaFromEditor: defaultSchema,\n    schemaFromExternalResource: '',\n    configFromEditor: defaultConfig,\n  };\n\n  render() {\n    const {\n      schema,\n      config = defaultConfig,\n      schemaFromEditor,\n      schemaFromExternalResource,\n      configFromEditor,\n    } = this.state;\n\n    const parsedConfig = config\n      ? parse<ConfigInterface>(config)\n      : parse<ConfigInterface>(defaultConfig);\n\n    return (\n      <PlaygroundWrapper>\n        <Navigation />\n        <ContentWrapper>\n          <CodeEditorsWrapper>\n            <Tabs\n              additionalHeaderContent={this.renderAdditionalHeaderContent()}\n            >\n              <Tab title=\"Schema\" key=\"Schema\">\n                <>\n                  <FetchSchema\n                    parentCallback={this.updateSchemaFromExternalResource}\n                  />\n                  <CodeEditor\n                    key=\"Schema\"\n                    code={schemaFromEditor}\n                    externalResource={schemaFromExternalResource}\n                    parentCallback={this.updateSchema}\n                    mode=\"text/yaml\"\n                  />\n                </>\n              </Tab>\n              <Tab title=\"Configuration\" key=\"Configuration\">\n                <CodeEditor\n                  key=\"Configuration\"\n                  code={configFromEditor}\n                  parentCallback={this.updateConfig}\n                />\n              </Tab>\n            </Tabs>\n          </CodeEditorsWrapper>\n          <AsyncApiWrapper>\n            <AsyncApi schema={schema} config={parsedConfig} />\n          </AsyncApiWrapper>\n        </ContentWrapper>\n      </PlaygroundWrapper>\n    );\n  }\n\n  private updateSchema = (schema: string) => {\n    this.setState({ schemaFromEditor: schema });\n  };\n\n  private updateSchemaFromExternalResource = (schema: string) => {\n    this.setState({ schemaFromExternalResource: schema });\n  };\n\n  private updateConfig = (config: string) => {\n    this.setState({ configFromEditor: config });\n  };\n\n  private refreshState = () => {\n    const { schemaFromEditor, configFromEditor } = this.state;\n    this.setState({\n      schema: schemaFromEditor,\n      config: configFromEditor,\n    });\n  };\n\n  private renderAdditionalHeaderContent = () => (\n    <RefreshIcon onClick={this.refreshState}>{'\\uE00A'}</RefreshIcon>\n  );\n}\n\nexport default Playground;\n","export const streetlights = `\nasyncapi: '2.0.0'\nid: 'urn:com:smartylighting:streetlights:server'\ninfo:\n  title: Streetlights API\n  version: '1.0.0'\n  description: |\n    The Smartylighting Streetlights API allows you to remotely manage the city lights.\n\n    ### Check out its awesome features:\n\n    * Turn a specific streetlight on/off 🌃\n    * Dim a specific streetlight 😎\n    * Receive real-time information about environmental lighting conditions 📈\n  license:\n    name: Apache 2.0\n    url: https://www.apache.org/licenses/LICENSE-2.0\n\nservers:\n  production:\n    url: api.streetlights.smartylighting.com:{port}\n    protocol: mqtt\n    description: Test broker\n    variables:\n      port:\n        description: Secure connection (TLS) is available through port 8883.\n        default: '1883'\n        enum:\n          - '1883'\n          - '8883'\n    security:\n      - apiKey: []\n      - supportedOauthFlows:\n        - streetlights:on\n        - streetlights:off\n        - streetlights:dim\n      - openIdConnectWellKnown: []\n\ndefaultContentType: application/json\n\nchannels:\n  smartylighting/streetlights/1/0/event/{streetlightId}/lighting/measured:\n    description: The topic on which measured values may be produced and consumed.\n    parameters:\n      streetlightId:\n        $ref: '#/components/parameters/streetlightId'\n    subscribe:\n      summary: Receive information about environmental lighting conditions of a particular streetlight.\n      operationId: receiveLightMeasurement\n      traits:\n        - $ref: '#/components/operationTraits/kafka'\n      message:\n        $ref: '#/components/messages/lightMeasured'\n\n  smartylighting/streetlights/1/0/action/{streetlightId}/turn/on:\n    parameters:\n      streetlightId:\n        $ref: '#/components/parameters/streetlightId'\n    publish:\n      operationId: turnOn\n      traits:\n        - $ref: '#/components/operationTraits/kafka'\n      message:\n        $ref: '#/components/messages/turnOnOff'\n\n  smartylighting/streetlights/1/0/action/{streetlightId}/turn/off:\n    parameters:\n      streetlightId:\n        $ref: '#/components/parameters/streetlightId'\n    publish:\n      operationId: turnOff\n      traits:\n        - $ref: '#/components/operationTraits/kafka'\n      message:\n        $ref: '#/components/messages/turnOnOff'\n\n  smartylighting/streetlights/1/0/action/{streetlightId}/dim:\n    parameters:\n      streetlightId:\n        $ref: '#/components/parameters/streetlightId'\n    publish:\n      operationId: dimLight\n      traits:\n        - $ref: '#/components/operationTraits/kafka'\n      message:\n        $ref: '#/components/messages/dimLight'\n\ncomponents:\n  messages:\n    lightMeasured:\n      name: lightMeasured\n      title: Light measured\n      summary: Inform about environmental lighting conditions for a particular streetlight.\n      contentType: application/json\n      traits:\n        - $ref: '#/components/messageTraits/commonHeaders'\n      payload:\n        $ref: \"#/components/schemas/lightMeasuredPayload\"\n    turnOnOff:\n      name: turnOnOff\n      title: Turn on/off\n      summary: Command a particular streetlight to turn the lights on or off.\n      traits:\n        - $ref: '#/components/messageTraits/commonHeaders'\n      payload:\n        $ref: \"#/components/schemas/turnOnOffPayload\"\n    dimLight:\n      name: dimLight\n      title: Dim light\n      summary: Command a particular streetlight to dim the lights.\n      traits:\n        - $ref: '#/components/messageTraits/commonHeaders'\n      payload:\n        $ref: \"#/components/schemas/dimLightPayload\"\n\n  schemas:\n    lightMeasuredPayload:\n      type: object\n      properties:\n        lumens:\n          type: integer\n          minimum: 0\n          description: Light intensity measured in lumens.\n        sentAt:\n          $ref: \"#/components/schemas/sentAt\"\n    turnOnOffPayload:\n      type: object\n      properties:\n        command:\n          type: string\n          enum:\n            - on\n            - off\n          description: Whether to turn on or off the light.\n        sentAt:\n          $ref: \"#/components/schemas/sentAt\"\n    dimLightPayload:\n      type: object\n      properties:\n        percentage:\n          type: integer\n          description: Percentage to which the light should be dimmed to.\n          minimum: 0\n          maximum: 100\n        sentAt:\n          $ref: \"#/components/schemas/sentAt\"\n    sentAt:\n      type: string\n      format: date-time\n      description: Date and time when the message was sent.\n\n  securitySchemes:\n    apiKey:\n      type: apiKey\n      in: user\n      description: Provide your API key as the user and leave the password empty.\n    supportedOauthFlows:\n      type: oauth2\n      description: Flows to support OAuth 2.0\n      flows:\n        implicit:\n          authorizationUrl: 'https://authserver.example/auth'\n          scopes:\n            'streetlights:on': Ability to switch lights on\n            'streetlights:off': Ability to switch lights off\n            'streetlights:dim': Ability to dim the lights\n        password:\n          tokenUrl: 'https://authserver.example/token'\n          scopes:\n            'streetlights:on': Ability to switch lights on\n            'streetlights:off': Ability to switch lights off\n            'streetlights:dim': Ability to dim the lights\n        clientCredentials:\n          tokenUrl: 'https://authserver.example/token'\n          scopes:\n            'streetlights:on': Ability to switch lights on\n            'streetlights:off': Ability to switch lights off\n            'streetlights:dim': Ability to dim the lights\n        authorizationCode:\n          authorizationUrl: 'https://authserver.example/auth'\n          tokenUrl: 'https://authserver.example/token'\n          refreshUrl: 'https://authserver.example/refresh'\n          scopes:\n            'streetlights:on': Ability to switch lights on\n            'streetlights:off': Ability to switch lights off\n            'streetlights:dim': Ability to dim the lights\n    openIdConnectWellKnown:\n      type: openIdConnect\n      openIdConnectUrl: 'https://authserver.example/.well-known'\n\n  parameters:\n    streetlightId:\n      description: The ID of the streetlight.\n      schema:\n        type: string\n\n  messageTraits:\n    commonHeaders:\n      headers:\n        type: object\n        properties:\n          my-app-header:\n            type: integer\n            minimum: 0\n            maximum: 100\n  \n  operationTraits:\n    kafka:\n      bindings:\n        kafka:\n          clientId: my-app-id\n`;\n","import { library, config } from '@fortawesome/fontawesome-svg-core';\nimport { faGithub, faSlack } from '@fortawesome/free-brands-svg-icons';\nimport { faGlobe } from '@fortawesome/free-solid-svg-icons';\n\nconfig.autoAddCss = false;\n\nlibrary.add(faGithub, faSlack, faGlobe);\n\nexport default interface Icon {\n  iconName: string;\n  url: string;\n  iconPrefix?: string;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport '@fortawesome/fontawesome-svg-core/styles.css';\nimport '@kyma-project/asyncapi-react/lib/styles/fiori.css';\nimport './common/icons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}